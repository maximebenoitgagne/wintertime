#!/usr/bin/env python
import sys
import os
import string
import re
from pyparsing import nestedExpr

parenExpr = nestedExpr()

def strip_args(s):
    l = parenExpr.parseString('(' + s + ')').asList()[0]
    return ''.join(s for s in l if type(s) != list)

exclude = {'do','end','enddo','if','then','else','elseif','endif',
           'where','elsewhere','endwhere','size',
           'abs','min','max','exp','log','sum',
           'lt','le','gt','ge','eq','ne','and','or','not',
           'intent','in','out','inout','module','contains',
           'integer','real','character','logical',
           'dimension','dim','implicit','none',
           'write','print','return','end','stop',
           '_rl','_rs','_d',
           }

idx = sys.argv[1]

sr = ''
locals = {}
idents = {}
for line in sys.stdin:
    m = re.match(r'       *(\w+)  *(\w+\b *[(,].*)$', line)
    if m:
        tp,lst = m.groups()
        if tp.lower() in ['subroutine', 'function']:
            sr = re.sub(r' *\(.*$', '', lst)
            locals = {}
            continue
        if tp.lower() in ['call']:
            line = re.sub(r'^[^(]*\(', '', lst)
        else:
            try:
                words = strip_args(lst).split(',')
            except:
                print lst
                raise
            for word in words:
                if word.lower() not in exclude:
                    locals[word.lower()] = 1
            continue
        
    if line.startswith(' '):
        #words = re.split(r'\(j\)[^\w]+', line[6:])
        words = re.findall(r'\b\w+\(' + idx + '\)', line[6:])
        for word in words:
            word = re.sub(r'\(' + idx + '\)$', '', word)
            if len(word) and word[:1] not in string.digits and word.lower() not in exclude and word.lower() not in locals:
                idents[word] = 1

for word in sorted(idents):
    print word
